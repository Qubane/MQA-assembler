; This is a comment
; there are no multiline comments, cuz why would you need one anyway?


; This is a macro
; arguments can be either pointers, or a just numbers
macro macro_add(arg1, arg2, arg3) {
    LRA arg1        ; load register ACC with 'arg1'
    ADD arg2        ; add 'arg2' to ACC
    SRA arg3        ; store ACC to arg3
}

; This is a macro overloading
macro macro_add(arg1, arg2) {
    LRA arg1        ; load register ACC with 'arg1'
    ADD arg2        ; add 'arg2' to ACC
}

; This is a nested macro
; it exists, but has no reason to :/
macro nested_1(arg1, arg2) {
    macro nested_2(arg1, arg2) {
        macro nested_3(arg1, arg2) {
            RET 2
        }
        RET 1
    }
    RET 0
}

; The other nested macro
macro nested_01() {
    nested_02()
}

macro nested_02() {
    nested_01()
}

; This is a macro with a label inside
macro for_loop(a) {
loop:
    JMP $loop
}


; this is a start header, the place where your program starts
_start:
    ; Adds 5 and 6 together and stores into address 0
    macro_add(5, 6, 0)

    ; Add $0 and 58 together and leave it in ACC
    macro_add($0, 58)

    CCF
    for_loop(1)

    ; End program
    JMP $_end


; this is an end header, the place where your programs ends. Optional.
_end:
    HALT